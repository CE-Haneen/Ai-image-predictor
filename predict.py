# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kpbBw_kULK2pWybRXXKYm3NtwFQxGCI_
"""

import tensorflow as tf
from tensorflow.keras.models import load_model
import numpy as np
from PIL import Image

model = load_model('keras_model.h5', compile=True)

image = Image.open('test.png').resize((224, 224))
image = np.asarray(image, dtype=np.float32).reshape(1, 224, 224, 3)
image = (image / 127.5) - 1

prediction = model.predict(image)
class_names = open("labels.txt", "r").readlines()
print("Prediction:", class_names[np.argmax(prediction)])

!pip install Tensorflow==2.12.1

import tensorflow as tf
print(tf.__version__)

from keras.models import load_model
from PIL import Image, ImageOps
import numpy as np

model = load_model("keras_model.h5", compile=False)
class_names = open("labels.txt", "r").readlines()

data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)
image = Image.open("test.png").convert("RGB")
size = (224, 224)
image = ImageOps.fit(image, size, Image.Resampling.LANCZOS)
image_array = np.asarray(image)

normalized_image_array = (image_array.astype(np.float32) / 127.5) - 1
data[0] = normalized_image_array

prediction = model.predict(data)
index = np.argmax(prediction)
class_name = class_names[index]
confidence_score = prediction[0][index]

print("Class:", class_name[2:], end="")
print("\nConfidence Score:", confidence_score)